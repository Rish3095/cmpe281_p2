{"ast":null,"code":"import{RECEIVE_USER}from\"../actions/user_actions\";import{TOGGLE_ALBUM_LIKE}from\"../actions/album_actions\";import{CHANGE_MULTIPLE_SONG_LIKES,TOGGLE_SONG_LIKE}from\"../actions/song_actions\";import{merge}from'lodash';export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;var newState;var currentUserId;switch(action.type){case RECEIVE_USER:var user={};user[action.user.data._id]=action.user.data;delete user[action.user.data._id].password;return merge({},user,state);case TOGGLE_SONG_LIKE:currentUserId=action.likeData.data.userId;newState=merge({},state);if(newState[currentUserId].likedSongs.includes(action.likeData.data.songId)){var index=newState[currentUserId].likedSongs.indexOf(action.likeData.data.songId);newState[currentUserId].likedSongs.splice(index,1);}else{newState[currentUserId].likedSongs.push(action.likeData.data.songId);}return newState;case TOGGLE_ALBUM_LIKE:newState=merge({},state);currentUserId=action.likeData.data.userId;if(newState[currentUserId].likedAlbums.includes(action.likeData.data.albumId)){var albumIdx=newState[currentUserId].likedAlbums.indexOf(action.likeData.data.albumId);newState[currentUserId].likedAlbums.splice(albumIdx,1);}else{newState[currentUserId].likedAlbums.push(action.likeData.data.albumId);}return newState;case CHANGE_MULTIPLE_SONG_LIKES:newState=merge({},state);if(action.likeData.data.songs.every(function(song){return newState.currentUser.likedSongs.includes(song);})){action.likeData.data.songs.forEach(function(song){var songIdx=newState.currentUser.likedSongs.indexOf(song);newState.currentUser.likedSongs.splice(songIdx,1);});}else{action.likeData.data.songs.forEach(function(song){if(!newState.currentUser.likedSongs.includes(song)){newState.currentUser.likedSongs.push(song);}});}return newState;default:return state;}}","map":{"version":3,"sources":["/Users/rishabhgupta/Desktop/281_project/cmpe281_p2/frontend/src/reducers/users_reducer.js"],"names":["RECEIVE_USER","TOGGLE_ALBUM_LIKE","CHANGE_MULTIPLE_SONG_LIKES","TOGGLE_SONG_LIKE","merge","state","action","newState","currentUserId","type","user","data","_id","password","likeData","userId","likedSongs","includes","songId","index","indexOf","splice","push","likedAlbums","albumId","albumIdx","songs","every","song","currentUser","forEach","songIdx"],"mappings":"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","sourcesContent":["import { RECEIVE_USER } from \"../actions/user_actions\";\nimport { TOGGLE_ALBUM_LIKE } from \"../actions/album_actions\";\nimport { CHANGE_MULTIPLE_SONG_LIKES, TOGGLE_SONG_LIKE } from \"../actions/song_actions\";\nimport { merge } from 'lodash';\n\nexport default function(state = {}, action) {\n    let newState;\n    let currentUserId;\n    switch (action.type) {\n        case RECEIVE_USER:\n            const user = {};\n            user[action.user.data._id] = action.user.data;\n            delete user[action.user.data._id].password\n            return merge({}, user, state);\n        case TOGGLE_SONG_LIKE: \n            currentUserId = action.likeData.data.userId;\n            newState = merge({}, state);\n            if(newState[currentUserId].likedSongs.includes(action.likeData.data.songId)) {\n                const index = newState[currentUserId].likedSongs.indexOf(action.likeData.data.songId);\n                newState[currentUserId].likedSongs.splice(index,1);\n            } else {\n                newState[currentUserId].likedSongs.push(action.likeData.data.songId);\n            }\n            return newState;\n        case TOGGLE_ALBUM_LIKE:\n            newState = merge({}, state);\n            currentUserId = action.likeData.data.userId;\n            if(newState[currentUserId].likedAlbums.includes(action.likeData.data.albumId)) {\n              const albumIdx = newState[currentUserId].likedAlbums.indexOf(action.likeData.data.albumId);\n              newState[currentUserId].likedAlbums.splice(albumIdx,1);\n            } else {\n              newState[currentUserId].likedAlbums.push(action.likeData.data.albumId);\n            }\n            return newState;\n        case CHANGE_MULTIPLE_SONG_LIKES:\n            newState = merge({}, state);\n              if(action.likeData.data.songs.every((song) => newState.currentUser.likedSongs.includes(song))) {\n                action.likeData.data.songs.forEach(song => {\n                  let songIdx = newState.currentUser.likedSongs.indexOf(song);\n                  newState.currentUser.likedSongs.splice(songIdx, 1);\n                })\n              } else {\n                action.likeData.data.songs.forEach(song => {\n                  if (!newState.currentUser.likedSongs.includes(song)) {\n                    newState.currentUser.likedSongs.push(song)\n                  }\n                }) \n              }\n            return newState;\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}