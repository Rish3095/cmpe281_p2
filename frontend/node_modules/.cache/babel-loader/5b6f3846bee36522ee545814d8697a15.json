{"ast":null,"code":"import ArtistIndex from\"./artist_index\";import{connect}from'react-redux';import{fetchArtists as _fetchArtists,searchArtists as _searchArtists}from'../../actions/artist_actions';import{playAllTracks as _playAllTracks}from'../../actions/player_queue_actions';var msp=function msp(state){return{artists:state.entities.artists};};var mdp=function mdp(){return function(dispatch){return{fetchArtists:function fetchArtists(){return dispatch(_fetchArtists());},searchArtists:function searchArtists(search){return dispatch(_searchArtists(search));},playAllTracks:function playAllTracks(tracks){return dispatch(_playAllTracks(tracks));}};};};export default connect(msp,mdp)(ArtistIndex);","map":{"version":3,"sources":["/Users/rishabhgupta/Desktop/281_project/cmpe281_p2/frontend/src/components/index/artist_container.js"],"names":["ArtistIndex","connect","fetchArtists","searchArtists","playAllTracks","msp","state","artists","entities","mdp","dispatch","search","tracks"],"mappings":"AAAA,MAAOA,CAAAA,WAAP,KAAwB,gBAAxB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,YAAY,GAAZA,CAAAA,aAAT,CAAuBC,aAAa,GAAbA,CAAAA,cAAvB,KAA4C,8BAA5C,CACA,OAASC,aAAa,GAAbA,CAAAA,cAAT,KAA8B,oCAA9B,CACA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACC,KAAD,CAAW,CACrB,MAAO,CAAEC,OAAO,CAAED,KAAK,CAACE,QAAN,CAAeD,OAA1B,CAAP,CACD,CAFD,CAIA,GAAME,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,SAAM,UAAAC,QAAQ,CAAI,CAC5B,MAAO,CACLR,YAAY,CAAE,8BAAMQ,CAAAA,QAAQ,CAACR,aAAY,EAAb,CAAd,EADT,CAELC,aAAa,CAAE,uBAACQ,MAAD,QAAYD,CAAAA,QAAQ,CAACP,cAAa,CAACQ,MAAD,CAAd,CAApB,EAFV,CAGLP,aAAa,CAAE,uBAACQ,MAAD,QAAYF,CAAAA,QAAQ,CAACN,cAAa,CAACQ,MAAD,CAAd,CAApB,EAHV,CAAP,CAKD,CANW,EAAZ,CAQA,cAAeX,CAAAA,OAAO,CACpBI,GADoB,CAEpBI,GAFoB,CAAP,CAGbT,WAHa,CAAf","sourcesContent":["import ArtistIndex from \"./artist_index\";\nimport { connect } from 'react-redux';\nimport { fetchArtists, searchArtists } from '../../actions/artist_actions';\nimport { playAllTracks } from '../../actions/player_queue_actions';\nconst msp = (state) => {\n  return { artists: state.entities.artists };\n};\n\nconst mdp = () => dispatch => {\n  return {\n    fetchArtists: () => dispatch(fetchArtists()),\n    searchArtists: (search) => dispatch(searchArtists(search)),\n    playAllTracks: (tracks) => dispatch(playAllTracks(tracks))\n  };\n};\n\nexport default connect(\n  msp,\n  mdp\n)(ArtistIndex);"]},"metadata":{},"sourceType":"module"}