{"ast":null,"code":"import PlaylistIndex from\"./playlist_index\";import{connect}from'react-redux';import{fetchUserPlaylists as _fetchUserPlaylists}from'../../actions/playlist_actions';import{playAllTracks as _playAllTracks}from'../../actions/player_queue_actions';var msp=function msp(state){return{playlists:state.entities.playlist,currentUserId:state.session.user.id};};var mdp=function mdp(){return function(dispatch){return{fetchUserPlaylists:function fetchUserPlaylists(userId){return dispatch(_fetchUserPlaylists(userId));},playAllTracks:function playAllTracks(songs){return dispatch(_playAllTracks(songs));}};};};export default connect(msp,mdp)(PlaylistIndex);","map":{"version":3,"sources":["/Users/rishabhgupta/Desktop/281_project/cmpe281_p2/frontend/src/components/index/playlist_index_container.js"],"names":["PlaylistIndex","connect","fetchUserPlaylists","playAllTracks","msp","state","playlists","entities","playlist","currentUserId","session","user","id","mdp","dispatch","userId","songs"],"mappings":"AAAA,MAAOA,CAAAA,aAAP,KAA0B,kBAA1B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,kBAAkB,GAAlBA,CAAAA,mBAAT,KAAmC,gCAAnC,CACA,OAASC,aAAa,GAAbA,CAAAA,cAAT,KAA8B,oCAA9B,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACC,KAAD,CAAW,CACrB,MAAO,CAAEC,SAAS,CAAED,KAAK,CAACE,QAAN,CAAeC,QAA5B,CACEC,aAAa,CAAEJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmBC,EADpC,CAAP,CAED,CAHD,CAKA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,SAAM,UAAAC,QAAQ,CAAI,CAC5B,MAAO,CACLZ,kBAAkB,CAAE,4BAACa,MAAD,QAAYD,CAAAA,QAAQ,CAACZ,mBAAkB,CAACa,MAAD,CAAnB,CAApB,EADf,CAELZ,aAAa,CAAE,uBAACa,KAAD,QAAWF,CAAAA,QAAQ,CAACX,cAAa,CAACa,KAAD,CAAd,CAAnB,EAFV,CAAP,CAID,CALW,EAAZ,CAOA,cAAef,CAAAA,OAAO,CACpBG,GADoB,CAEpBS,GAFoB,CAAP,CAGbb,aAHa,CAAf","sourcesContent":["import PlaylistIndex from \"./playlist_index\";\nimport { connect } from 'react-redux';\nimport { fetchUserPlaylists } from '../../actions/playlist_actions';\nimport { playAllTracks } from '../../actions/player_queue_actions';\n\nconst msp = (state) => {\n  return { playlists: state.entities.playlist,\n           currentUserId: state.session.user.id };\n};\n\nconst mdp = () => dispatch => {\n  return {\n    fetchUserPlaylists: (userId) => dispatch(fetchUserPlaylists(userId)),\n    playAllTracks: (songs) => dispatch(playAllTracks(songs))\n  };\n};\n\nexport default connect(\n  msp,\n  mdp\n)(PlaylistIndex);"]},"metadata":{},"sourceType":"module"}