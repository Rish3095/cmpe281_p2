{"ast":null,"code":"import _toConsumableArray from\"/Users/rishabhgupta/Desktop/281_project/cmpe281_p2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{PLAY_TRACK,PLAY_ALL_TRACKS,ADD_TRACK,REMOVE_TRACK,REMOVE_ALL_TRACKS,NEXT_TRACK,PREV_TRACK,SHUFFLE_TRACKS,MOVE_UP,MOVE_DOWN,REMOVE_EVERYTHING}from'../actions/player_queue_actions';var playerQueueReducer=function playerQueueReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;Object.freeze(state);var nextState=_toConsumableArray(state);switch(action.type){case PLAY_TRACK:return[action.track];case PLAY_ALL_TRACKS:return action.tracks;case ADD_TRACK:nextState.push(action.track);return nextState;case REMOVE_TRACK:return nextState.filter(function(track){return track._id!==action.trackId;});case REMOVE_ALL_TRACKS:return[nextState[0]];case NEXT_TRACK:nextState.push(nextState.shift());return nextState;case PREV_TRACK:nextState.unshift(nextState.pop());return nextState;case SHUFFLE_TRACKS:return shuffleArray(nextState,state[0]);case MOVE_UP:return moveUp(nextState,action.track);case MOVE_DOWN:return moveDown(nextState,action.track);case REMOVE_EVERYTHING:return[];default:return state;}};var shuffleArray=function shuffleArray(arr,first){var temp;var newPos;while(arr[0]===first){for(var i=0;i<arr.length;i++){newPos=Math.floor(Math.random()*(i+1));temp=arr[i];arr[i]=arr[newPos];arr[newPos]=temp;}}return arr;};var moveUp=function moveUp(arr,track){var idx=arr.indexOf(track);if(idx!==0){arr[idx]=arr[idx-1];arr[idx-1]=track;return arr;}else{return arr;}};var moveDown=function moveDown(arr,track){var idx=arr.indexOf(track);if(idx!==arr.length-1){arr[idx]=arr[idx+1];arr[idx+1]=track;return arr;}else{return arr;}};export default playerQueueReducer;","map":{"version":3,"sources":["/Users/rishabhgupta/Desktop/281_project/cmpe281_p2/frontend/src/reducers/player_queue_reducer.js"],"names":["PLAY_TRACK","PLAY_ALL_TRACKS","ADD_TRACK","REMOVE_TRACK","REMOVE_ALL_TRACKS","NEXT_TRACK","PREV_TRACK","SHUFFLE_TRACKS","MOVE_UP","MOVE_DOWN","REMOVE_EVERYTHING","playerQueueReducer","state","action","Object","freeze","nextState","type","track","tracks","push","filter","_id","trackId","shift","unshift","pop","shuffleArray","moveUp","moveDown","arr","first","temp","newPos","i","length","Math","floor","random","idx","indexOf"],"mappings":"0LAAA,OACIA,UADJ,CAEIC,eAFJ,CAGIC,SAHJ,CAIIC,YAJJ,CAKIC,iBALJ,CAMIC,UANJ,CAOIC,UAPJ,CAQIC,cARJ,CASIC,OATJ,CAUIC,SAVJ,CAWIC,iBAXJ,KAYO,iCAZP,CAcA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAsB,IAArBC,CAAAA,KAAqB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CAC7CC,MAAM,CAACC,MAAP,CAAcH,KAAd,EACA,GAAII,CAAAA,SAAS,oBAAOJ,KAAP,CAAb,CACA,OAAQC,MAAM,CAACI,IAAf,EACI,IAAKjB,CAAAA,UAAL,CACI,MAAO,CAACa,MAAM,CAACK,KAAR,CAAP,CACJ,IAAKjB,CAAAA,eAAL,CACI,MAAOY,CAAAA,MAAM,CAACM,MAAd,CACJ,IAAKjB,CAAAA,SAAL,CACIc,SAAS,CAACI,IAAV,CAAeP,MAAM,CAACK,KAAtB,EACA,MAAOF,CAAAA,SAAP,CACJ,IAAKb,CAAAA,YAAL,CACI,MAAOa,CAAAA,SAAS,CAACK,MAAV,CAAiB,SAAAH,KAAK,QAAIA,CAAAA,KAAK,CAACI,GAAN,GAAcT,MAAM,CAACU,OAAzB,EAAtB,CAAP,CACJ,IAAKnB,CAAAA,iBAAL,CACI,MAAO,CAACY,SAAS,CAAC,CAAD,CAAV,CAAP,CACJ,IAAKX,CAAAA,UAAL,CACIW,SAAS,CAACI,IAAV,CAAeJ,SAAS,CAACQ,KAAV,EAAf,EACA,MAAOR,CAAAA,SAAP,CACJ,IAAKV,CAAAA,UAAL,CACIU,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,GAAV,EAAlB,EACA,MAAOV,CAAAA,SAAP,CACJ,IAAKT,CAAAA,cAAL,CACI,MAAOoB,CAAAA,YAAY,CAACX,SAAD,CAAYJ,KAAK,CAAC,CAAD,CAAjB,CAAnB,CACJ,IAAKJ,CAAAA,OAAL,CACI,MAAOoB,CAAAA,MAAM,CAACZ,SAAD,CAAYH,MAAM,CAACK,KAAnB,CAAb,CACJ,IAAKT,CAAAA,SAAL,CACI,MAAOoB,CAAAA,QAAQ,CAACb,SAAD,CAAYH,MAAM,CAACK,KAAnB,CAAf,CACJ,IAAKR,CAAAA,iBAAL,CACI,MAAO,EAAP,CACJ,QACI,MAAOE,CAAAA,KAAP,CA3BR,CA6BH,CAhCD,CAkCA,GAAMe,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACG,GAAD,CAAMC,KAAN,CAAgB,CACjC,GAAIC,CAAAA,IAAJ,CACA,GAAIC,CAAAA,MAAJ,CACA,MAAOH,GAAG,CAAC,CAAD,CAAH,GAAWC,KAAlB,CAAyB,CACrB,IAAK,GAAIG,CAAAA,CAAC,CAAC,CAAX,CAAcA,CAAC,CAAGJ,GAAG,CAACK,MAAtB,CAA8BD,CAAC,EAA/B,CAAmC,CAC/BD,MAAM,CAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiBJ,CAAC,CAAC,CAAnB,CAAX,CAAT,CACAF,IAAI,CAAGF,GAAG,CAACI,CAAD,CAAV,CACAJ,GAAG,CAACI,CAAD,CAAH,CAASJ,GAAG,CAACG,MAAD,CAAZ,CACAH,GAAG,CAACG,MAAD,CAAH,CAAcD,IAAd,CACH,CACJ,CACD,MAAOF,CAAAA,GAAP,CACH,CAZD,CAcA,GAAMF,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACE,GAAD,CAAMZ,KAAN,CAAgB,CAC3B,GAAIqB,CAAAA,GAAG,CAAGT,GAAG,CAACU,OAAJ,CAAYtB,KAAZ,CAAV,CACA,GAAIqB,GAAG,GAAK,CAAZ,CAAe,CACXT,GAAG,CAACS,GAAD,CAAH,CAAWT,GAAG,CAACS,GAAG,CAAC,CAAL,CAAd,CACAT,GAAG,CAACS,GAAG,CAAC,CAAL,CAAH,CAAarB,KAAb,CACA,MAAOY,CAAAA,GAAP,CACH,CAJD,IAIO,CACH,MAAOA,CAAAA,GAAP,CACH,CAEJ,CAVD,CAYA,GAAMD,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAMZ,KAAN,CAAgB,CAC7B,GAAIqB,CAAAA,GAAG,CAAGT,GAAG,CAACU,OAAJ,CAAYtB,KAAZ,CAAV,CACA,GAAIqB,GAAG,GAAKT,GAAG,CAACK,MAAJ,CAAW,CAAvB,CAA0B,CACtBL,GAAG,CAACS,GAAD,CAAH,CAAWT,GAAG,CAACS,GAAG,CAAC,CAAL,CAAd,CACAT,GAAG,CAACS,GAAG,CAAC,CAAL,CAAH,CAAarB,KAAb,CACA,MAAOY,CAAAA,GAAP,CACH,CAJD,IAIO,CACH,MAAOA,CAAAA,GAAP,CACH,CACJ,CATD,CAWA,cAAenB,CAAAA,kBAAf","sourcesContent":["import { \n    PLAY_TRACK,\n    PLAY_ALL_TRACKS,\n    ADD_TRACK,\n    REMOVE_TRACK,\n    REMOVE_ALL_TRACKS,\n    NEXT_TRACK,\n    PREV_TRACK,\n    SHUFFLE_TRACKS,\n    MOVE_UP,\n    MOVE_DOWN,\n    REMOVE_EVERYTHING\n} from '../actions/player_queue_actions';\n\nconst playerQueueReducer = (state=[], action) => {\n    Object.freeze(state);\n    let nextState = [...state]\n    switch (action.type) {\n        case PLAY_TRACK:\n            return [action.track];\n        case PLAY_ALL_TRACKS:\n            return action.tracks;\n        case ADD_TRACK: \n            nextState.push(action.track);\n            return nextState;\n        case REMOVE_TRACK:\n            return nextState.filter(track => track._id !== action.trackId);\n        case REMOVE_ALL_TRACKS:\n            return [nextState[0]];\n        case NEXT_TRACK:\n            nextState.push(nextState.shift());\n            return nextState;\n        case PREV_TRACK:\n            nextState.unshift(nextState.pop());\n            return nextState;\n        case SHUFFLE_TRACKS:\n            return shuffleArray(nextState, state[0]);\n        case MOVE_UP: \n            return moveUp(nextState, action.track);\n        case MOVE_DOWN: \n            return moveDown(nextState, action.track);\n        case REMOVE_EVERYTHING:\n            return [];\n        default: \n            return state;\n    }\n}\n\nconst shuffleArray = (arr, first) => {\n    let temp;\n    let newPos;\n    while (arr[0] === first) {\n        for (let i=0; i < arr.length; i++) {\n            newPos = Math.floor(Math.random() * (i+1));\n            temp = arr[i];\n            arr[i] = arr[newPos];\n            arr[newPos] = temp;\n        }\n    }\n    return arr;\n}\n\nconst moveUp = (arr, track) => {\n    let idx = arr.indexOf(track);\n    if (idx !== 0) {\n        arr[idx] = arr[idx-1]\n        arr[idx-1] = track;\n        return arr;\n    } else {\n        return arr;\n    }\n\n}\n\nconst moveDown = (arr, track) => {\n    let idx = arr.indexOf(track);\n    if (idx !== arr.length-1) {\n        arr[idx] = arr[idx+1]\n        arr[idx+1] = track;\n        return arr;\n    } else {\n        return arr;\n    }\n}\n\nexport default playerQueueReducer;\n\n"]},"metadata":{},"sourceType":"module"}