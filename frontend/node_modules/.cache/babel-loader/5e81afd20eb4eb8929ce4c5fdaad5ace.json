{"ast":null,"code":"import*as SongApiUtil from\"../util/song_util\";export var RECEIVE_SONG=\"RECEIVE_SONG\";export var RECEIVE_SONGS=\"RECEIVE_SONGS\";export var TOGGLE_SONG_LIKE=\"TOGGLE_SONG_LIKE\";export var CHANGE_MULTIPLE_SONG_LIKES=\"CHANGE_MULTIPLE_SONG_LIKES\";var receiveSong=function receiveSong(song){return{type:RECEIVE_SONG,song:song};};var receiveSongs=function receiveSongs(songs){return{type:RECEIVE_SONGS,songs:songs};};var changeLike=function changeLike(likeData){return{type:TOGGLE_SONG_LIKE,likeData:likeData};};// const changeMultipleLikes = (likeData) => {\n//   return ({\n//     type: CHANGE_MULTIPLE_SONG_LIKES,\n//     likeData\n//   })\n// }\nexport var fetchSong=function fetchSong(id){return function(dispatch){return SongApiUtil.fetchSong(id).then(function(song){dispatch(receiveSong(song));});};};export var fetchSongs=function fetchSongs(){return function(dispatch){return SongApiUtil.fetchSongs().then(function(songs){dispatch(receiveSongs(songs));});};};export var fetchUserLiked=function fetchUserLiked(userId){return function(dispatch){return SongApiUtil.fetchUserLiked(userId).then(function(songs){dispatch(receiveSongs(songs));});};};export var fetchSongsByGenre=function fetchSongsByGenre(genre){return function(dispatch){return SongApiUtil.fetchSongsByGenre(genre).then(function(songs){dispatch(receiveSongs(songs));});};};export var searchSongs=function searchSongs(search){return function(dispatch){return SongApiUtil.searchSongs(search).then(function(songs){dispatch(receiveSongs(songs));});};};export var toggleLike=function toggleLike(likeData){return function(dispatch){return SongApiUtil.toggleLike(likeData).then(function(likeData){dispatch(changeLike(likeData));});};};// export const toggleMultipleLikes = likeData => dispatch => {\n//   return SongApiUtil.toggleMultipleLikes(likeData).then((likeData) => {dispatch(changeMultipleLikes(likeData))})\n// }","map":{"version":3,"sources":["/Users/rishabhgupta/Desktop/281_project/cmpe281_p2/frontend/src/actions/song_actions.js"],"names":["SongApiUtil","RECEIVE_SONG","RECEIVE_SONGS","TOGGLE_SONG_LIKE","CHANGE_MULTIPLE_SONG_LIKES","receiveSong","song","type","receiveSongs","songs","changeLike","likeData","fetchSong","id","dispatch","then","fetchSongs","fetchUserLiked","userId","fetchSongsByGenre","genre","searchSongs","search","toggleLike"],"mappings":"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","sourcesContent":["import * as SongApiUtil from \"../util/song_util\";\nexport const RECEIVE_SONG = \"RECEIVE_SONG\";\nexport const RECEIVE_SONGS = \"RECEIVE_SONGS\";\n\nexport const TOGGLE_SONG_LIKE = \"TOGGLE_SONG_LIKE\";\nexport const CHANGE_MULTIPLE_SONG_LIKES = \"CHANGE_MULTIPLE_SONG_LIKES\"\n\nconst receiveSong = (song) => {\n  return {\n    type: RECEIVE_SONG,\n    song\n  };\n};\n\nconst receiveSongs = (songs) => {\n  return ({\n    type: RECEIVE_SONGS,\n    songs,\n  })\n};\n\nconst changeLike = (likeData) => {\n  return ({\n    type: TOGGLE_SONG_LIKE,\n    likeData\n  })\n}\n\n// const changeMultipleLikes = (likeData) => {\n//   return ({\n//     type: CHANGE_MULTIPLE_SONG_LIKES,\n//     likeData\n//   })\n// }\n\nexport const fetchSong = id => dispatch => {\n  return SongApiUtil.fetchSong(id)\n    .then(song => { dispatch(receiveSong(song)) })\n};\n\nexport const fetchSongs = () => (dispatch) => {\n  return SongApiUtil.fetchSongs()\n    .then((songs) => { dispatch(receiveSongs(songs)) })\n};\n\nexport const fetchUserLiked = (userId) => (dispatch) => {\n  return SongApiUtil.fetchUserLiked(userId)\n    .then((songs) => { dispatch(receiveSongs(songs)) })\n};\n\nexport const fetchSongsByGenre = (genre) => (dispatch) => {\n  return SongApiUtil.fetchSongsByGenre(genre)\n    .then((songs) => { dispatch(receiveSongs(songs)) })\n};\n\nexport const searchSongs = (search) => (dispatch) => {\n  return SongApiUtil.searchSongs(search)\n    .then((songs) => { dispatch(receiveSongs(songs)) })\n};\n\nexport const toggleLike = likeData => dispatch => {\n  return SongApiUtil.toggleLike(likeData).then((likeData) => { dispatch(changeLike(likeData))});\n}\n\n// export const toggleMultipleLikes = likeData => dispatch => {\n//   return SongApiUtil.toggleMultipleLikes(likeData).then((likeData) => {dispatch(changeMultipleLikes(likeData))})\n// }"]},"metadata":{},"sourceType":"module"}